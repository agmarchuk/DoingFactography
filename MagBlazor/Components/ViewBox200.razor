@using RDFEngine;
@inject OAData.IFactographDataService db;

<div style="width:@(width)px; height:@(height)px; border:solid thin; border-color:black;">
    <div style="font-size: small; height: 18px;">@prolog</div>
    <div>
        <a href="look/@recId" style="speak:normal;">@name</a>
        <span style="font-size: small;">@dt</span>
    </div>
    @if (uri != null)
    {
        string src = "docs/GetImage?s=small&u=" + uri;
        <img src="@src" style=" text-align:center;"/>
    }
</div>

@code {
    [Parameter]
    public string recId { get; set; }
    [Parameter]
    public string prolog { get; set; }
    [Parameter]
    public string width { get; set; }
    [Parameter]
    public string height { get; set; }

    private TRecord trec;

    private string tp;
    private string dt;
    private string name;
    private string uri;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        trec = new TRecord(recId, RDFEngine.Infobase.rontology, db);
        tp = trec.Tp;
        dt = trec.GetDates();
        name = trec.GetName()?.Text;

        if (tp == "http://fogid.net/o/person")
        {
            TRecord reflectedfoto = trec.GetMultiInverse("http://fogid.net/o/reflected")
            .Where(r => r.GetText("http://fogid.net/o/ground")?.Text == "official")
            .Where(r =>
            {
                var doc = r.GetDirect("http://fogid.net/o/in-doc");
                if (doc.Tp == "http://fogid.net/o/photo-doc") return true;
                return false;
            })
            .FirstOrDefault();
            uri = reflectedfoto
                ?.GetDirect("http://fogid.net/o/in-doc")
                ?.GetText("http://fogid.net/o/uri")?.Text;
        }
        else
        {
            uri = trec.GetText("http://fogid.net/o/uri")?.Text;
        }
    }
}
