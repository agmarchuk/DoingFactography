@page "/"
@using System.Collections.Generic
@using System.Linq
@using RDFEngine

<h1>страница /Home</h1>

<div>
    <input @bind="searchsample" />
</div>
@if (!string.IsNullOrEmpty(searchsample))
{
    var query = Infobase.engine.RSearch(searchsample);
    foreach (RRecord rec in query)
    {
        <div>
            <span>@rec.Tp</span> &nbsp;
            <a href="javascript:void(0)" @onclick="@(e =>BuildPortrait(rec.Id))">@rec.GetName()</a>
        </div>
    }
}
else if (model != null)
{
    var m = model;
    <table border="1">
        <tr>
            <td colspan="@(m.row.Length+1)">@m.Tp @m.Id</td>
        </tr>
        <tr>
            @foreach (var c in m.row)
            {
                <td>@c.Prop</td>
            }
            <td></td>
        </tr>
        <tr>
            @if (erecord != null && m.Id == erecord.Id)
            {
                <td colspan="@(m.row.Length+1)" style="border:dashed;">
                    <table border="1">
                        @* Это рядки записи, предназначенной для редактирования *@
                        @foreach (var c in erecord.Props)
                        {
                        <tr>
                            <td>@c.Prop</td>
                            @if (c is RField)
                            {
                                <td width="100%" @onclick="@(e => EditField(c.Prop))">
                                    @if (c.Prop == editfieldprop)
                                    {
                                        <input @bind="fieldvalue" />
                                    }
                                    else
                                    {
                                        <span>@(((RField)c).Value)</span>
                                    }
                                </td>

                            }
                            else if (c is RDirect)
                            {
                                var rr = ((RDirect)c).DRec;
                                if (rr != null)
                                {
                        <td>
                            <a href="javascript:void(0)" @onclick="@(e =>BuildPortrait(rr.Id))">@(rr.GetName())</a>
                            &nbsp;&nbsp;
                            <a href="javascript:void(0)" @onclick="@(e => DeleteLink(c.Prop))">x</a>
                        </td>
                                }
                                else
                                {
                                    if (searchlinkprop == c.Prop)
                                    {
                                        <td style="background-color: antiquewhite;">
                                            <div>
                                                <input @bind="searchsubitem" />
                                            </div>
                                            @if (!string.IsNullOrEmpty(searchsubitem))
                                            {
                                                var query = Infobase.engine.RSearch(searchsubitem);
                                                foreach (RRecord rec in query)
                                                {
                                                    <div>
                                                        <span>@rec.Tp</span> &nbsp;
                                                        <a href="javascript:void(0)" @onclick="@(e =>FixLink(c.Prop, rec.Id, rec.Tp, rec.GetName()))">@rec.GetName()</a>
                                                    </div>
                                                }
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        <td style="background-color: antiquewhite;" @onclick="@(e => SearchLink(c.Prop))"></td>
                                    }
                                }
                            }
                        </tr>
                        }
                        <tr>
                            <td colspan="2">
                                <button @onclick="Ok">ok</button>
                                <button @onclick="Cancel">cancel</button>
                            </td>
                        </tr>
                    </table>
                </td>
            }
            else
            {
                @foreach (var c in m.row)
                {
                    if (c is RField)
                    {
                        <td>@(((RField)c).Value)</td>
                    }
                    else if (c is RDirect)
                    {
                        var rr = ((RDirect)c).DRec;
                        if (rr != null)
                        {
                            <td><a href="javascript:void(0)" @onclick="@(e =>BuildPortrait(rr.Id))">@(rr.GetName())</a></td>
                        }
                        else
                        {
                            <td></td>
                        }
                    }
                    else
                    {
                        <td>???</td>
                    }
                }
                <td>
                    <a href="javascript:void(0)" @onclick="@(e =>SetEditItem(model.Id, null))">ред</a>
                </td>
            }
        </tr>
    </table>
    @foreach (var p in m.inv)
    {
        foreach (var t in p.lists)
        {
            RRecord defrow = t.list[0];
            <table border="1">
                <tr>
                    <td colspan="@(defrow.Props.Length)">
                        <span>@(p.Prop)</span>
                        <span>@(defrow.Tp)</span>
                    </td>
                </tr>
                <tr>
                    @foreach (var c in defrow.Props)
                    {
                        if (c.Prop == p.Prop) { continue; }
                        <td>@(c.Prop)</td>
                    }
                    <td></td>
                </tr>
                @foreach (var r in t.list)
                {
                    <tr>
                    @if (erecord != null && r.Id == erecord.Id)
                    {
                        <td colspan="@(r.Props.Length + 1)" style="border:dashed;">
                            <table border="1">
                                @* Это рядки записи, предназначенной для редактирования *@
                                @foreach (var c in erecord.Props)
                                {
                                    if (c.Prop == p.Prop) { continue; }
                                <tr>
                                    <td>@c.Prop</td>
                                    @if (c is RField)
                                    {
                                        <td width="100%" @onclick="@(e => EditField(c.Prop))">
                                            @if (c.Prop == editfieldprop)
                                            {
                                                <input @bind="fieldvalue" />
                                            }
                                            else
                                            {
                                                <span>@(((RField)c).Value)</span>
                                            }
                                        </td>

                                    }
                                    else if (c is RDirect)
                                    {
                                        var rr = ((RDirect)c).DRec;
                                        if (rr != null)
                                        {
                                            <td>
                                                <a href="javascript:void(0)" @onclick="@(e =>BuildPortrait(rr.Id))">@(rr.GetName())</a>
                                                &nbsp;&nbsp;
                                                <a href="javascript:void(0)" @onclick="@(e => DeleteLink(c.Prop))">x</a>
                                            </td>
                                        }
                                        else
                                        {
                                            if (searchlinkprop == p.Prop)
                                            {
                                <td style="background-color: antiquewhite;">
                                    <div>
                                        <input @bind="searchsubitem" />
                                    </div>
                                    @if (!string.IsNullOrEmpty(searchsubitem))
                                    {
                                        var query = Infobase.engine.RSearch(searchsubitem);
                                        foreach (RRecord rec in query)
                                        {
                                            <div>
                                                <span>@rec.Tp</span> &nbsp;
                                                <a href="javascript:void(0)" @onclick="@(e =>FixLink(c.Prop, rec.Id, rec.Tp, rec.GetName()))">@rec.GetName()</a>
                                            </div>
                                        }
                                    }
                                </td>
                                            }
                                            else
                                            {
                                                <td style="background-color: antiquewhite;" @onclick="@(e => SearchLink(p.Prop))"></td>
                                            }
                                        }
                                    }
                                </tr>
                                }
                                <tr>
                                    <td colspan="2">
                                        <button @onclick="Ok">ok</button>
                                        <button @onclick="Cancel">cancel</button>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    }
                    else
                    {
                        @foreach (var c in r.Props)
                        {
                            if (c.Prop == p.Prop) { continue; }
                            if (c is RField)
                            {
                                <td>@(((RField)c).Value)</td>
                            }
                            else if (c is RDirect && ((RDirect)c).DRec != null)
                            {
                                var rr = ((RDirect)c).DRec;
                                if (rr != null)
                                {
                    <td>
                        <a href="javascript:void(0)" @onclick="@(e => BuildPortrait(rr.Id))">@(rr.GetName())</a>
                    </td>
                                }
                                else
                                {
                                    <td>link???</td>
                                }
                            }
                            else
                            {
                                <td>??? @(c.GetType().Name)</td>
                            }
                        }
                        <td><a href="javascript:void(0)" @onclick="@(e => SetEditItem(r.Id, p.Prop))">ред</a></td>
                    }
                    </tr>
                }

            </table>
        }
    }

}
<div>@look</div>

@code{
    private string searchsample = "и";
    Models.P3Model model = null;
    private void BuildPortrait(string id)
    {
        if (erecord != null) return; // Не реагировать на гиперссылку если не закончено редактирование какой-то записи
        searchsample = null;
        RRecord rec = ((REngine)(Infobase.engine)).BuildPortrait(id);
        model = (new Models.P3Model()).Build(rec);
    }

    // редактируемая запись и идентификатор обратного свойства
    private RRecord erecord = null;
    private string forbidden;

    private void SetEditItem(string eid, string forbidden)
    {
        if (erecord != null) return; // Не реагировать на гиперссылку если не закончено редактирование какой-то записи
        if (eid == model.Id)
        {
            erecord = new RRecord { Id = model.Id, Tp = model.Tp, Props = model.row.Select(p =>
            {
                if (p is RField) return new RField { Prop = ((RField)p).Prop, Value = ((RField)p).Value };
                else return p;
            }).ToArray() };
        }
        else
        {
            RRecord re = model.inv
                .SelectMany(iv => iv.lists)
                .SelectMany(t => t.list)
                .FirstOrDefault(r => r.Id == eid);
            if (re != null)
                erecord = new RRecord
                {
                    Id = re.Id,
                    Tp = re.Tp,
                    Props = re.Props.Select(p =>
                    {
                        if (p is RField) return new RField { Prop = ((RField)p).Prop, Value = ((RField)p).Value };
                        else return p;
                    }).ToArray()
                };
            else erecord = null;
        }
        editfieldprop = null;
        this.forbidden = forbidden;
    }

    private string editfieldprop = null;
    private string fieldvalue = "Hello!";
    private void EditField(string prop)
    {
        if (editfieldprop != null)
        {
            var pr = erecord.Props.Where(p => p is RField)
            .Cast<RField>()
            .FirstOrDefault(f => f.Prop == editfieldprop);
            pr.Value = fieldvalue;
        }
        editfieldprop = prop;
        // Перепишем значение в fieldvalue
        fieldvalue = erecord.Props.Where(p => p is RField)
            .Cast<RField>()
            .FirstOrDefault(f => f.Prop == prop)
            .Value;
    }

    private void Ok()
    {
        if (editfieldprop != null)
        {
            var pr = erecord.Props.Where(p => p is RField)
            .Cast<RField>()
            .FirstOrDefault(f => f.Prop == editfieldprop);
            pr.Value = fieldvalue;
        }
        if (forbidden != null)
        {
            RDirect dpro = (RDirect)erecord.Props.First(p => p.Prop == forbidden);
            dpro.DRec = new RRecord { Id = model.Id, Tp = model.Tp };
        }
        Infobase.engine.Update(erecord);
        //Infobase.engine.UpdateRRecord(erecord, forbidden, model.Id);
        erecord = null;
        BuildPortrait(model.Id);
    }
    private void Cancel() { erecord = null; }

    private void DeleteLink(string prop)
    {
        var erec = new RRecord
        {
            Id = erecord.Id,
            Tp = erecord.Tp,
            Props = erecord.Props.Select(p => p.Prop != prop ? p : new RDirect { Prop = prop, DRec = null }).ToArray()
        };
        erecord = erec;
    }
    private string searchlinkprop = null;
    private void SearchLink(string prop)
    {
        searchlinkprop = prop;
    }
    private string searchsubitem = null;
    private void FixLink(string prop, string id, string tp, string name)
    {
        var erec = new RRecord
        {
            Id = erecord.Id,
            Tp = erecord.Tp,
            Props = erecord.Props.Select(p => p.Prop != prop ? p :
                new RDirect
                {
                    Prop = prop,
                    DRec = new RRecord
                    {
                        Id = id,
                        Tp = tp,
                        Props = new RProperty[] { new RField { Prop = "name", Value = name } }
                    }
                }).ToArray()
        };
        erecord = erec;
        searchlinkprop = null;
        searchsubitem = null;
    }
    string look = null;

}