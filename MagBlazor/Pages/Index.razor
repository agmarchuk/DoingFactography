@using RDFEngine
@page "/"

<MagBlazor.Components.Search onSelected="(rec) => UtilizeRecord((RRecord)rec)" searchsample="И" />
@if (focusRec != null)
{
    <MagBlazor.Components.DrawTable inverseTp="@focusRec.Tp" records="@(new RRecord[] { focusRec })" onGo="(id) => Build((string)id)" />
    foreach (var propName in Infobase.rontology.GetInversePropsByType(focusRec.Tp))
    {
        var pr = focusInversePropTypes.FirstOrDefault(ipt => ipt.Prop == propName);
        foreach (var typ in Infobase.rontology.DomainsOfProp(propName))
        {
            var it = pr == null ? null : pr.lists.FirstOrDefault(x => x.Tp == typ);
            <MagBlazor.Components.DrawTable inverseProp="@propName" inverseTp="@typ" records="@(it==null?null:it.list)" onGo="(id) => Build((string)id)" />
        }
    }
}

@code{
    //Models.P3Model model = null;
    private RRecord focusRec = null;
    private Models.InversePropType[] focusInversePropTypes = null;
    private void UtilizeRecord(RRecord rec)
    {
        Build(rec.Id);
    }

    private void Build(string recId)
    {
        RRecord erec = ((REngine)(Infobase.engine)).BuildPortrait(recId);
        var query = erec.Props.Where(p => p is RInverse && ((RInverse)p).IRec != null)
        .Cast<RInverse>()
        .GroupBy(d => d.Prop)
        .Select(kd => new Models.InversePropType
        {
            Prop = kd.Key,
            lists =
            kd.GroupBy(d => d.IRec.Tp)
                .Select(dd =>
                {
                    var qu = dd.Select(x => x.IRec)
                        .Select(rr => new RRecord { Id = rr.Id, Tp = rr.Tp, Props = Infobase.rontology.ReorderFieldsDirects(rr) })
                        .ToArray();
                    return new Models.InverseType
                    {
                        Tp = dd.Key,
                        list = qu
                    };
                }).ToArray()
        }).ToArray();
        focusInversePropTypes = query;
        focusRec = new RRecord { Id = erec.Id, Tp = erec.Tp, Props = Infobase.rontology.ReorderFieldsDirects(erec) };
    }

    private string look = "";
}

<hr />
<div>@look</div>
